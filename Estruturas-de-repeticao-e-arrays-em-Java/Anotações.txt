------- AULA 1 - Visão geral

Os computadores foram feitos para executarem operações diversas vezes.
Cada retetição é chamada de loop (ou laço), conceito básico de Programação Estruturada (Java tá ai).
As repetições tem que satisfazer um sentença até que seu valor booleano seja false.

Estruturas de Repetição:
- while: repetição com teste no incício. Faz o teste da expressão, executa o que há no seu interior
O while é executado apenas se sua condição for TRUE, caso não seja, não é executado.

- do-while: teste no final. Faz o que há no interior e depois faz o teste de repetição.
- for: repetição contada. Faz o teste, executa a sentença, atualiza os valores do teste e, se for atendido, repete.

-- break: é utilizado para terminar de forma abrupta, e seguindo com o restante do código
-- continue: é utilizado para ignorar o restante da repetição e voltar para a condição da repetição, aí continuando a repetição


Operadores ++ (incremento) e -- (decremento)
i++ -> (retorna o i) i = i + 1;
++i -> i = i + 1; (retorna i)

Operadores +=, -=, *=, /=
número += i; número = número + i


-- Arrays
- Arrays é uma espécie de inventário.
- Objeto utilizado para armazenar sequencialmente dados do mesmo tipo (int, char, double, etc.)
- Permanecem com o mesmo tamanho depois de criados.

Declaração:
  int[] v = {93, 5, -2, 3, 9, 22};
	v[0]=93;	 v[5]=22

Ex.:
 - Array unidimensional:
	c[0] = 30, c[1] = 20, c[2] = 15, c[3] = 10
 - Array multidimensional:
	c[0][0] = 30, c[0][1] = 31, c[0][2] = 32
	c[1][0] = 20, c[1][1] = 21, c[1][2] = 22
	c[2][0] = 10, c[2][1] = 21, c[2][2] = 22


------- AULA 2 - Exercícios Estruturas de repetição



------- AULA 3 - Exercícos Array
